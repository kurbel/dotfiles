# $Id: t-williams.conf,v 1.1 2009/11/02 18:59:28 nicm Exp $
#
# ~/.tmux.conf - tmux terminal multiplexer config
# Thayer Williams (http://cinderwick.ca)
# "Feel free to do whatever you like with it."

# I typically start tmux from ~/.xinitrc with the following:
#
#   urxvt -e bash -c "tmux attach -d -t mysession" &
#
# and recall it any time thereafter with xbindkeys (Mod4+s):
#
#   "urxvt -e bash -c 'tmux attach -d -t mysession'"
#     m:0x50 + c:39

# make C-Right & C-Left work in console
set-window-option -g xterm-keys on

# use UTF8
#set -g utf8
#set-window-option -g utf8 on

# set prefix key to ctrl+\ until I have time to adapt
unbind C-b
unbind C-Right
unbind C-Left
set -g prefix 'C-\'

# send the prefix to client inside window (ala nested sessions)
bind-key 'C-\' send-prefix

# toggle last window like screen
bind-key 'C-\' last-window

set -s escape-time 0

# confirm before killing a window or the server
bind-key k confirm kill-window
bind-key K confirm kill-server

# toggle statusbar
bind-key b set-option status

# ctrl+spacebar / ctrl+shift+spacebar cycles thru windows
#bind-key -n C-Tab next-window
#bind-key -n C-S-Tab previous-window
bind-key -n C-Space next-window
bind-key -n C-S-Space previous-window

# open a man page in new window
bind / command-prompt "split-window 'exec man %%'"

# quick view of processes
bind '~' split-window "exec htop"

# use PREFIX \ to split window horizontally and PREFIX - to split vertically
bind \ split-window -h
bind - split-window -v

# use ALT + arrow keys to select panes
bind-key -n M-right select-pane -R
bind-key -n M-Space select-pane -R
bind-key -n M-left select-pane -L
bind-key -n M-up select-pane -U
bind-key -n M-down select-pane -D

# scrollback buffer n lines
set -g history-limit 5000

# listen for activity on all windows
set -g bell-action any

# on-screen time for display-panes in ms
set -g display-panes-time 2000

# start window indexing at one instead of zero
set -g base-index 1

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux.#I.#W"

# ThG: set vi mode
#set-window-option -g mode-keys vi

# use vim keybindings in copy mode
setw -g mode-keys vi

# setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# ThG: force a reload of the .tmux.conf file with Ctrl-a r
unbind r
bind r source-file ~/.tmux.conf

# get the wonderful powerline status bar -- obviously needs powerline foo installed ;)
source /usr/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf
